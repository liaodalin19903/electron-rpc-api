{
  "name": "electron-rpc-api",
  "version": "7.0.0",
  "description": "Wrapper around the Electron's IPC for building type-safe API based RPC-like and reactive interactions",
  "author": "Vladimir Yakovlev <dev.vladimir.y@gmail.com> (https://github.com/vladimiry)",
  "license": "MIT",
  "repository": "git@github.com:vladimiry/electron-rpc-api.git",
  "engines": {
    "node": ">=10.0.0"
  },
  "keywords": [
    "electron",
    "pubsub",
    "ipc",
    "rpc"
  ],
  "main": "./lib/index.js",
  "scripts": {
    "lib": "npm-run-all lib:clean lint lib:compile test",
    "lib:clean": "rimraf ./lib",
    "lib:compile": "tsc --listEmittedFiles -p ./src/lib/tsconfig.json",
    "lib:compile:watch": "tsc -w -p ./src/lib/tsconfig.json",
    "lint": "npm-run-all lint:lib lint:test",
    "lint:lib": "tslint -p ./src/lib/tsconfig.json -c ./tslint.json \"./src/{lib,@types}/**/*.ts\"",
    "lint:test": "tslint -p ./test/tsconfig.json -c ./test/tslint.json \"./test/**/*.ts\"",
    "output:clean": "rimraf ./output",
    "test": "cross-env TS_NODE_PROJECT=./test/tsconfig.json ava --verbose \"./test/**/*.{spec,test}.ts\"",
    "prepare": "husky install"
  },
  "ava": {
    "extensions": [
      "js",
      "ts"
    ],
    "files": [
      "./test/**/*.{spec,test}.{ts,js}"
    ],
    "require": [
      "ts-node/register",
      "tsconfig-paths/register"
    ],
    "verbose": true
  },
  "peerDependencies": {
    "electron": ">=5.0.0",
    "rxjs": "^6.x"
  },
  "dependencies": {
    "pubsub-to-rpc-api": "^6.0.0-beta1",
    "pure-uuid": "^1.6.2",
    "tslib": "^2.1.0"
  },
  "devDependencies": {
    "@types/node": "^14.14.37",
    "@types/sinon": "^9.0.11",
    "@vladimiry/import-sort-style": "^0.1.1",
    "ava": "^3.15.0",
    "cross-env": "^7.0.3",
    "husky": "^6.0.0",
    "import-sort-cli": "^6.0.0",
    "import-sort-parser-typescript": "^6.0.0",
    "install-peers": "^1.0.2",
    "lint-staged": "^10.5.4",
    "npm-run-all": "^4.1.5",
    "rewiremock": "^3.14.3",
    "rimraf": "^3.0.2",
    "sinon": "^10.0.0",
    "ts-node": "^9.1.1",
    "tsconfig-paths": "^3.9.0",
    "tslint": "^6.1.3",
    "tslint-consistent-codestyle": "^1.16.0",
    "tslint-eslint-rules": "^5.4.0",
    "tslint-rules-bunch": "^1.0.0",
    "typescript": "^4.2.3"
  },
  "resolutions": {
    "*/**/tslib": "^2.x",
    "import-sort-cli/yargs": "^16.x",
    "import-sort-parser-typescript/typescript": "^4.x"
  }
}
